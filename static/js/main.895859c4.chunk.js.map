{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGood","getClick","item","includes","setState","prevState","filter","goods","addItem","length","slice","join","this","className","type","onClick","map","indexOf","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qPAGMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAKIC,E,4MACJC,MAAc,CACZC,aAAc,CAAC,Q,EAGjBC,SAAW,SAACC,GACN,EAAKH,MAAMC,aAAaG,SAASD,GACnC,EAAKE,UAAS,SAAAC,GAAS,MAAK,CAC1BL,aAAcK,EAAUL,aAAaM,QAAO,SAACC,GAAD,OAAWA,IAAUL,SAGnE,EAAKE,UAAS,SAAAC,GAAS,MAAK,CAC1BL,aAAa,GAAD,mBAAMK,EAAUL,cAAhB,CAA8BE,S,EAKhDM,QAAU,SAACR,GACT,OAA4B,IAAxBA,EAAaS,OACT,GAAN,OAAUT,EAAV,gBAGEA,EAAaS,OAAS,EAClB,GAAN,OAAUT,EAAaU,MAAM,GAAI,GAAGC,KAAK,MAAzC,yBACQX,EAAaA,EAAaS,OAAS,GAD3C,iBAIK,qB,4CAGT,WAAU,IAAD,OACCT,EAAiBY,KAAKb,MAAtBC,aAER,OACE,sBAAKa,UAAU,MAAf,UACE,qBAAIA,UAAU,QAAd,UACGD,KAAKJ,QAAQR,GACY,IAAxBA,EAAaS,QACb,wBACEK,KAAK,SACLD,UAAU,MACVE,QAAS,WACP,EAAKX,SAAS,CAAEJ,aAAc,MAJlC,kBAWJ,6BACGH,EAAgBmB,KAAI,SAAAd,GACnB,OACE,sBAAKW,UAAU,OAAf,UACE,oBAEEA,UAAYb,EAAaG,SAASD,GAAS,iBAAmB,oBAFhE,SAIGA,GAHIL,EAAgBoB,QAAQf,IAK/B,wBACEY,KAAK,SACLC,QAAS,WACP,EAAKd,SAASC,IAEhBW,UAAYb,EAAaG,SAASD,GAAS,wBAA0B,qBALvE,SAOIF,EAAaG,SAASD,GAAS,SAAW,uB,GAlE5CgB,IAAMC,WA6ETrB,IC5FfsB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.895859c4.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic'];\n\n  type State = {\n    selectedGood: string[];\n  };\nclass App extends React.Component<{}, State> {\n  state:State = {\n    selectedGood: ['Jam'],\n  };\n\n  getClick = (item: string) => {\n    if (this.state.selectedGood.includes(item)) {\n      this.setState(prevState => ({\n        selectedGood: prevState.selectedGood.filter((goods) => goods !== item),\n      }));\n    } else {\n      this.setState(prevState => ({\n        selectedGood: [...prevState.selectedGood, item],\n      }));\n    }\n  };\n\n  addItem = (selectedGood: string[]) => {\n    if (selectedGood.length === 1) {\n      return `${selectedGood} is selected`;\n    }\n\n    if (selectedGood.length > 1) {\n      return `${selectedGood.slice(0, -1).join(', ')}\n        and ${selectedGood[selectedGood.length - 1]} are selected`;\n    }\n\n    return 'No goods selected';\n  };\n\n  render() {\n    const { selectedGood } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"title\">\n          {this.addItem(selectedGood)}\n          {(selectedGood.length !== 0) && (\n            <button\n              type=\"button\"\n              className=\"btn\"\n              onClick={() => {\n                this.setState({ selectedGood: [] });\n              }}\n            >\n              X\n            </button>\n          )}\n        </h1>\n        <ul>\n          {goodsFromServer.map(item => {\n            return (\n              <div className=\"list\">\n                <li\n                  key={goodsFromServer.indexOf(item)}\n                  className={(selectedGood.includes(item)) ? 'list__selected' : 'list__notSelected'}\n                >\n                  {item}\n                </li>\n                <button\n                  type=\"button\"\n                  onClick={() => {\n                    this.getClick(item);\n                  }}\n                  className={(selectedGood.includes(item)) ? 'btn btn__isNotVisible' : 'btn btn__isVisible'}\n                >\n                  {(selectedGood.includes(item)) ? 'Remove' : 'Add'}\n                </button>\n              </div>\n            );\n          })}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}